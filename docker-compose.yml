name: ohdsi_cdm_csv_loader
services:
  # ───────────────────────────────
  # PostgreSQL  ➜ Up (healthy)
  # ───────────────────────────────
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: >
      postgres
      -c max_wal_size=4GB
      -c min_wal_size=1GB
      -c checkpoint_completion_target=0.9
      -c shared_buffers=512MB
      -c effective_cache_size=2GB
      -c maintenance_work_mem=256MB
      -c work_mem=64MB
      -c wal_buffers=32MB
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # ← NEW
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ───────────────────────────────
  # One-shot CDM loader ➜ Up (healthy) after ETL
  # ───────────────────────────────
  cdm_loader:
    build: 
      context: .
      platforms:
        - linux/amd64
        - linux/arm64
    depends_on:
      db:
        condition: service_healthy          # wait for DB health first
    restart: "no"                           # don’t auto-respawn
    mem_limit: 8g
    memswap_limit: 8g
    environment:
      DB_TYPE: ${DB_TYPE}
      DB_SERVER: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DRIVER_PATH: ${DRIVER_PATH}
      DB_SCHEMA: ${DB_SCHEMA}
      CSV_PATH: ${CSV_PATH}
      CDM_VERSION: ${CDM_VERSION}
      SYNTHEA_VERSION: ${SYNTHEA_VERSION}
      SYNTHEA_SCHEMA: ${SYNTHEA_SCHEMA}
      SYNTHEA_CSV: ${SYNTHEA_CSV}
    volumes:
      - ${HOST_DRIVER_PATH:-./driver/}:${DRIVER_PATH}
      - ${HOST_CSV_PATH}:${CSV_PATH}
      - ${HOST_SYNTHEA_PATH}:${SYNTHEA_CSV}

    # Run ETL → drop a flag file → idle forever
    command:
      - bash
      - -ceu
      - >
        python main.py &&
        touch /tmp/etl_done &&
        echo '*** COMPLETED: ETL finished ***';
        tail -f /dev/null        # keep PID 1 alive

    # ← NEW
    healthcheck:
      test: ["CMD-SHELL", "[ -f /tmp/etl_done ]"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 1h         # give ETL time to run

volumes:
  postgres_data: